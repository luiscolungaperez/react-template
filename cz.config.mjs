import { definePrompt } from 'cz-git';

export default definePrompt({
  alias: { fd: 'docs: fix typos' },
  messages: {
    type: "Select the type of change that you're committing:",
    scope: 'Select the scope of this change:',
    subject: 'Write a commit description:\n',
    body: 'Provide a longer description of the change (optional). Use "|" to break new line:\n',
    confirmCommit: 'Are you sure you want to proceed with the commit above?',
  },
  types: [
    {
      value: 'feat',
      name: 'feat:     A new feature',
      emoji: '‚ú®',
    },
    {
      value: 'fix',
      name: 'fix:      A bug fix',
      emoji: 'üêõ',
    },
    {
      value: 'chore',
      name: "chore:    Other changes that don't modify src or test files",
      emoji: 'üî®',
    },
    {
      value: 'test',
      name: 'test:     Adding missing tests or correcting existing tests',
      emoji: '‚úÖ',
    },
    {
      value: 'docs',
      name: 'docs:     Documentation only changes',
      emoji: 'üìù',
    },
    {
      value: 'ci',
      name: 'ci:       Changes to our CI configuration files and scripts',
      emoji: 'üé°',
    },
    {
      value: 'style',
      name: 'style:    Changes that do not affect the meaning of the code',
      emoji: 'üíÑ',
    },
    {
      value: 'refactor',
      name: 'refactor: A code change that neither fixes a bug nor adds a feature',
      emoji: '‚ôªÔ∏è',
    },
    {
      value: 'perf',
      name: 'perf:     A code change that improves performance',
      emoji: '‚ö°',
    },
    {
      value: 'revert',
      name: 'revert:   Reverts a previous commit',
      emoji: '‚è™',
    },
  ],
  scopes: [
    'app',
    'assets',
    'components',
    'context',
    'hooks',
    'libs',
    'pages',
    'routes',
    'types',
    'utils',
    'ci',
    'deps',
    'docs',
    'lint',
    'test',
  ],
  breaklineChar: '|',
  useEmoji: false,
  emojiAlign: 'left',
  allowCustomScopes: false,
  allowEmptyScopes: false,
  customScopesAlign: 'bottom',
  customScopesAlias: 'custom',
  emptyScopesAlias: 'empty',
  upperCaseSubject: false,
  markBreakingChangeMode: false,
  allowBreakingChanges: ['feat', 'fix'],
  breaklineNumber: 100,
  skipQuestions: ['breaking', 'footer', 'footerPrefix', 'confirmCommit'],
  customIssuePrefixAlign: 'top',
  emptyIssuePrefixAlias: 'skip',
  customIssuePrefixAlias: 'custom',
  confirmColorize: true,
  maxHeaderLength: Infinity,
  maxSubjectLength: 100,
  minSubjectLength: 0,
});
